name: CI

on:
  push:
    branches: [main]
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
      ADMIN_SECRET: ${{ secrets.ADMIN_SECRET }}

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Enable & prepare pnpm from packageManager
        run: |
          corepack enable
          corepack prepare pnpm@10.12.2 --activate
          pnpm -v

      # Cache pnpm store manually
      - name: Get pnpm store path
        id: pnpm-cache
        run: echo "STORE_PATH=$(pnpm store path)" >> "$GITHUB_OUTPUT"

      - name: Cache pnpm store
        uses: actions/cache@v4
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      - name: Cache Turbo
        uses: actions/cache@v4
        with:
          path: .turbo
          key: ${{ runner.os }}-turbo-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-turbo-

      - name: Install dependencies (frozen)
        run: pnpm install --frozen-lockfile

      - name: Generate Prisma Client
        run: pnpm db:generate

      - name: Lint, test, build
        run: pnpm turbo run lint test build --filter=!packages/ui --filter=!packages/server

      - name: Start app
        run: |
          pnpm start & \
          npx wait-on http://localhost:3000

      - name: Lighthouse budget check
        run: pnpm lighthouse-ci http://localhost:3000 --budget-path=.lighthousebudget.json
