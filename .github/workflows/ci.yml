name: CI

on:
  push:
    branches: [main]
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      # Provide envs via repository Secrets (Settings → Secrets → Actions)
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
      ADMIN_SECRET: ${{ secrets.ADMIN_SECRET }}
      STRIPE_SECRET_KEY: ${{ secrets.STRIPE_SECRET_KEY }}
      STRIPE_WEBHOOK_SECRET: ${{ secrets.STRIPE_WEBHOOK_SECRET }}
      NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY: ${{ secrets.NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY }}
      RESEND_API_KEY: ${{ secrets.RESEND_API_KEY }}

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "pnpm"

      - name: Enable Corepack (uses packageManager from package.json)
        run: corepack enable

      - name: Show versions
        run: |
          node -v
          pnpm -v

      - name: Cache Turbo
        uses: actions/cache@v4
        with:
          path: .turbo
          key: ${{ runner.os }}-turbo-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-turbo-

      - name: Install dependencies (frozen)
        run: pnpm install --frozen-lockfile

      - name: Generate Prisma Client
        run: pnpm db:generate

      - name: Lint, test, build
        run: pnpm turbo run lint test build --filter=!packages/ui --filter=!packages/server

      # Start the app before Lighthouse (adjust start script if needed)
      - name: Start app
        run: |
          pnpm start & \
          npx wait-on http://localhost:3000

      - name: Lighthouse budget check
        run: pnpm lighthouse-ci http://localhost:3000 --budget-path=.lighthousebudget.json

      # Helpful debug if something fails
      - name: Diagnostics on failure
        if: failure()
        run: |
          echo "::group::pnpm"
          pnpm config list || true
          pnpm store path || true
          echo "::endgroup::"
          echo "::group::env"
          node -p "process.versions" || true
          env | sort
          echo "::endgroup::"
