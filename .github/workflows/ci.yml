name: CI

on:
  push:
    branches: [main]
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      ADMIN_SECRET: ${{ secrets.ADMIN_SECRET }}
      RESEND_API_KEY: ${{ secrets.RESEND_API_KEY }}
      EMAIL_FROM: ${{ secrets.EMAIL_FROM }}
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      NEXT_PUBLIC_SITE_URL: ${{ secrets.NEXT_PUBLIC_SITE_URL }}
      NEXT_PUBLIC_TEST_EMAIL: ${{ secrets.NEXT_PUBLIC_TEST_EMAIL }}
      TEST_EMAIL: ${{ secrets.TEST_EMAIL }}
      DUMMY_PAYMENT_MODE: ${{ secrets.DUMMY_PAYMENT_MODE }}

    steps:
      - uses: actions/checkout@v4

      # Install pnpm first so setup-node can use pnpm caching
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.12.2
          run_install: false

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Show versions
        run: |
          node -v
          pnpm -v

      - name: Install deps (frozen)
        run: pnpm install --frozen-lockfile

      # If you see engine download flakiness in CI, swap the two steps below:
      - name: Generate Prisma Client
        run: pnpm prisma generate --schema packages/db/prisma/schema.prisma

      - name: Build
        run: pnpm run build

      # quick smoke boot to ensure server starts
      - name: Start app
        run: |
          pnpm start & \
          npx wait-on http://localhost:3000

      - name: Diagnostics on failure
        if: failure()
        run: |
          echo "::group::env"
          env | sort
          echo "::endgroup::"
          echo "::group::pnpm"
          pnpm config list || true
          pnpm store path || true
          echo "::endgroup::"
